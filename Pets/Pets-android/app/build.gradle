buildscript {
    repositories {
        mavenCentral()
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
        classpath 'com.github.triplet.gradle:play-publisher:1.1.0'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'com.neenbedankt.android-apt'
apply from: '../travisutils/gradle-s3-upload.gradle'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

ext {
    SUPPORT_LIBRARY_VERSION = '25.0.0'
    SUPPORT_LIBRARY_SERVICE = '9.8.0'
}

android {
    compileSdkVersion Integer.parseInt(project.ANDROID_BUILD_SDK_VERSION)
    buildToolsVersion project.ANDROID_BUILD_TOOLS_VERSION

    defaultConfig {
        // Enabling multidex support.
        multiDexEnabled true
        applicationId "com.gvn.pets"
        minSdkVersion Integer.parseInt(project.ANDROID_BUILD_MIN_SDK_VERSION)
        targetSdkVersion Integer.parseInt(project.ANDROID_BUILD_TARGET_SDK_VERSION)
        versionCode Integer.parseInt(project.VERSION_CODE)
        versionName project.VERSION_NAME
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        //Enabling Cpp
        externalNativeBuild {
            cmake {
                cppFlags ""
            }
        }
    }

    signingConfigs {
        release {
            storeFile file("../travisutils/release.jks")
            storePassword "cO6vdu"
            keyAlias "zap"
            keyPassword "VciAXc"
        }
        beta {
            storeFile file("../travisutils/debug.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
    }

    buildTypes {
        /*this is environment for dev*/
        develop {
            signingConfig signingConfigs.beta
            debuggable true
            applicationIdSuffix ".develop"
            versionNameSuffix '-DEV'
            zipAlignEnabled true
            ext.betaDistributionReleaseNotes = 'Dev'
            ext.betaDistributionGroupAliases = 'android-testgroup'
            buildConfigField "boolean", "reportCrashlytics", "true"
            //Server config
            buildConfigField "String", "SERVER_URL", '"http://202.32.203.168:9119"'
            buildConfigField "String", "IMAGE_SERVER_URL", '"http://202.32.203.168:9117/"'
            buildConfigField "String", "CHAT_SERVER_IP", '"202.32.203.168"'
            buildConfigField "int", "CHAT_SERVER_PORT", "9118"
            buildConfigField "String", "SIP_SERVER_IP", '"202.32.203.169"'
            buildConfigField "String", "SIP_SERVER_PORT", '"5080"'
            buildConfigField "String", "API_ENDPOINT", '"https://pets-testing.gvn.vn/"'
            //Connect time out to server in SECONDS.
            buildConfigField "int", "TIMEOUT_CONNECT", "10"
            //Read stream on server timeout in SECONDS.
            buildConfigField "int", "TIMEOUT_READ", "20"
            //Write time out to server in SECONDS.
            buildConfigField "int", "TIMEOUT_WRITE", "20"

            //App
            resValue "string", "app_name", "Pets Dev"
            resValue "string", "version_name", project.VERSION_NAME
        }

        qa {
            signingConfig signingConfigs.beta
            debuggable true
            applicationIdSuffix ".testing"
            versionNameSuffix '-TEST'
            zipAlignEnabled true
            ext.betaDistributionReleaseNotes = 'Test'
            ext.betaDistributionGroupAliases = 'android-testgroup'
            buildConfigField "boolean", "reportCrashlytics", "true"
            //Server config
            buildConfigField "String", "SERVER_URL", '"http://app.meets-app.jp:9119"'
            buildConfigField "String", "IMAGE_SERVER_URL", '"http://app.meets-app.jp:9117/"'
            buildConfigField "String", "CHAT_SERVER_IP", '"app.meets-app.jp"'
            buildConfigField "int", "CHAT_SERVER_PORT", "9118"
            buildConfigField "String", "SIP_SERVER_IP", '"sip.meets-app.jp"'
            buildConfigField "String", "SIP_SERVER_PORT", '"5080"'
            buildConfigField "String", "API_ENDPOINT", '"https://pets-testing.gvn.vn/"'
            //Connect time out to server in SECONDS.
            buildConfigField "int", "TIMEOUT_CONNECT", "10"
            //Read stream on server timeout in SECONDS.
            buildConfigField "int", "TIMEOUT_READ", "20"
            //Write time out to server in SECONDS.
            buildConfigField "int", "TIMEOUT_WRITE", "20"

            //App
            resValue "string", "app_name", "Pets test"
            resValue "string", "version_name", project.VERSION_NAME
        }

        staging {
            signingConfig signingConfigs.release
            debuggable true
            minifyEnabled true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "boolean", "reportCrashlytics", "true"
            //Server config
            buildConfigField "String", "SERVER_URL", '"http://app.meets-app.jp:9119"'
            buildConfigField "String", "IMAGE_SERVER_URL", '"http://app.meets-app.jp:9117/"'
            buildConfigField "String", "CHAT_SERVER_IP", '"app.meets-app.jp"'
            buildConfigField "int", "CHAT_SERVER_PORT", "9118"
            buildConfigField "String", "SIP_SERVER_IP", '"sip.meets-app.jp"'
            buildConfigField "String", "SIP_SERVER_PORT", '"5080"'
            buildConfigField "String", "API_ENDPOINT", '"https://pets-testing.gvn.vn/"'
            //Connect time out to server in SECONDS.
            buildConfigField "int", "TIMEOUT_CONNECT", "10"
            //Read stream on server timeout in SECONDS.
            buildConfigField "int", "TIMEOUT_READ", "20"
            //Write time out to server in SECONDS.
            buildConfigField "int", "TIMEOUT_WRITE", "20"

            //App
            resValue "string", "app_name", "Pets staging"
            resValue "string", "version_name", project.VERSION_NAME
        }

        release {
            signingConfig signingConfigs.release
            debuggable false
            minifyEnabled true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "boolean", "reportCrashlytics", "true"
            //Server config
            buildConfigField "String", "SERVER_URL", '"http://app.meets-app.jp:9119"'
            buildConfigField "String", "IMAGE_SERVER_URL", '"http://app.meets-app.jp:9117/"'
            buildConfigField "String", "CHAT_SERVER_IP", '"app.meets-app.jp"'
            buildConfigField "int", "CHAT_SERVER_PORT", "9118"
            buildConfigField "String", "SIP_SERVER_IP", '"sip.meets-app.jp"'
            buildConfigField "String", "SIP_SERVER_PORT", '"5080"'
            buildConfigField "String", "API_ENDPOINT", '"https://pets-testing.gvn.vn/"'
            //Connect time out to server in SECONDS.
            buildConfigField "int", "TIMEOUT_CONNECT", "10"
            //Read stream on server timeout in SECONDS.
            buildConfigField "int", "TIMEOUT_READ", "20"
            //Write time out to server in SECONDS.
            buildConfigField "int", "TIMEOUT_WRITE", "20"

            //App
            resValue "string", "app_name", "Pets"
            resValue "string", "version_name", project.VERSION_NAME
        }
    }
    compileOptions {
        encoding "UTF-8"
    }
    lintOptions {
        // set to true to have all release builds run lint on issues with severity=fatal
        // and abort the build (controlled by abortOnError above) if fatal issues are found
        checkReleaseBuilds true
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
        // if true, only report errors
        ignoreWarnings true
        // if true, treat all warnings as errors
        warningsAsErrors false
        //disable logging tag can be at most 23 characters
        disable 'LongLogTag'
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/README.txt'
        exclude '.readme'
    }
    dexOptions {
        //javaMaxHeapSize "1536M"
        jumboMode = true
        preDexLibraries = false
        //incremental true
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'junit:junit:4.12'
    //Lib
    compile project(':libui')
    //di
    compile 'com.google.dagger:dagger:2.0.2'
    compile 'com.google.dagger:dagger-compiler:2.0.2'
    provided 'org.glassfish:javax.annotation:10.0-b28'
    //ui
    compile "com.android.support:appcompat-v7:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:cardview-v7:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:design:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:support-v4:$SUPPORT_LIBRARY_VERSION"
    //Network
    compile 'com.google.code.gson:gson:2.4'
    compile 'com.squareup.retrofit2:retrofit:2.0.2'
    compile 'com.squareup.retrofit2:converter-gson:2.0.2'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.0.2'
    compile 'com.squareup.okhttp3:okhttp:3.2.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.0.1'
    //Multidex
    compile 'com.android.support:multidex:1.0.1'
    //crashlytics
    compile('com.crashlytics.sdk.android:crashlytics:2.6.5@aar') {
        transitive = true;
    }
    compile('com.crashlytics.sdk.android:crashlytics-ndk:1.1.2@aar') {
        transitive = true;
    }
}
crashlytics {
    enableNdk true
    androidNdkOut 'src/main/obj'
    androidNdkLibsOut 'src/main/libs'
}
